{
  "version": 3,
  "sources": ["../../svelte-qrcode/src/lib/qrcode/index.js", "../../svelte-qrcode/src/lib/index.svelte"],
  "sourcesContent": ["/*\n * QRious v4.0.2\n * Copyright (C) 2017 Alasdair Mercer\n * Copyright (C) 2010 Tom Zerucha\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.QRious = factory());\n  }(this, (function () { 'use strict';\n  \n    /*\n     * Copyright (C) 2017 Alasdair Mercer, !ninja\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy\n     * of this software and associated documentation files (the \"Software\"), to deal\n     * in the Software without restriction, including without limitation the rights\n     * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n     * copies of the Software, and to permit persons to whom the Software is\n     * furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all\n     * copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n     * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n     * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n     * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n     * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n     * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n     * SOFTWARE.\n     */\n  \n    /**\n     * A bare-bones constructor for surrogate prototype swapping.\n     *\n     * @private\n     * @constructor\n     */\n    var Constructor = /* istanbul ignore next */ function() {};\n    /**\n     * A reference to <code>Object.prototype.hasOwnProperty</code>.\n     *\n     * @private\n     * @type {Function}\n     */\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n     * A reference to <code>Array.prototype.slice</code>.\n     *\n     * @private\n     * @type {Function}\n     */\n    var slice = Array.prototype.slice;\n  \n    /**\n     * Creates an object which inherits the given <code>prototype</code>.\n     *\n     * Optionally, the created object can be extended further with the specified <code>properties</code>.\n     *\n     * @param {Object} prototype - the prototype to be inherited by the created object\n     * @param {Object} [properties] - the optional properties to be extended by the created object\n     * @return {Object} The newly created object.\n     * @private\n     */\n    function createObject(prototype, properties) {\n      var result;\n      /* istanbul ignore next */\n      if (typeof Object.create === 'function') {\n        result = Object.create(prototype);\n      } else {\n        Constructor.prototype = prototype;\n        result = new Constructor();\n        Constructor.prototype = null;\n      }\n  \n      if (properties) {\n        extendObject(true, result, properties);\n      }\n  \n      return result;\n    }\n  \n    /**\n     * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n     * <code>statics</code> provided.\n     *\n     * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n     * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n     * instead. The class name may also be used string representation for instances of the child constructor (via\n     * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n     *\n     * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n     * constructor which only calls the super constructor will be used instead.\n     *\n     * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n     *\n     * @param {string} [name=this.class_] - the class name to be used for the child constructor\n     * @param {Function} [constructor] - the constructor for the child\n     * @param {Object} [prototype] - the prototype properties to be defined for the child\n     * @param {Object} [statics] - the static properties to be defined for the child\n     * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n     * @public\n     */\n    function extend(name, constructor, prototype, statics) {\n      var superConstructor = this;\n  \n      if (typeof name !== 'string') {\n        statics = prototype;\n        prototype = constructor;\n        constructor = name;\n        name = null;\n      }\n  \n      if (typeof constructor !== 'function') {\n        statics = prototype;\n        prototype = constructor;\n        constructor = function() {\n          return superConstructor.apply(this, arguments);\n        };\n      }\n  \n      extendObject(false, constructor, superConstructor, statics);\n  \n      constructor.prototype = createObject(superConstructor.prototype, prototype);\n      constructor.prototype.constructor = constructor;\n  \n      constructor.class_ = name || superConstructor.class_;\n      constructor.super_ = superConstructor;\n  \n      return constructor;\n    }\n  \n    /**\n     * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n     *\n     * if any source is <code>null</code> it will be ignored.\n     *\n     * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n     * <code>target</code>; otherwise <code>false</code>\n     * @param {Object} target - the target object which should be extended\n     * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n     * @return {void}\n     * @private\n     */\n    function extendObject(own, target, sources) {\n      sources = slice.call(arguments, 2);\n  \n      var property;\n      var source;\n  \n      for (var i = 0, length = sources.length; i < length; i++) {\n        source = sources[i];\n  \n        for (property in source) {\n          if (!own || hasOwnProperty.call(source, property)) {\n            target[property] = source[property];\n          }\n        }\n      }\n    }\n  \n    var extend_1 = extend;\n  \n    /**\n     * The base class from which all others should extend.\n     *\n     * @public\n     * @constructor\n     */\n    function Nevis() {}\n    Nevis.class_ = 'Nevis';\n    Nevis.super_ = Object;\n  \n    /**\n     * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n     * <code>statics</code> provided.\n     *\n     * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n     * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n     * instead. The class name may also be used string representation for instances of the child constructor (via\n     * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n     *\n     * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n     * constructor which only calls the super constructor will be used instead.\n     *\n     * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n     *\n     * @param {string} [name=this.class_] - the class name to be used for the child constructor\n     * @param {Function} [constructor] - the constructor for the child\n     * @param {Object} [prototype] - the prototype properties to be defined for the child\n     * @param {Object} [statics] - the static properties to be defined for the child\n     * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n     * @public\n     * @static\n     * @memberof Nevis\n     */\n    Nevis.extend = extend_1;\n  \n    var nevis = Nevis;\n  \n    var lite = nevis;\n  \n    /**\n     * Responsible for rendering a QR code {@link Frame} on a specific type of element.\n     *\n     * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.\n     *\n     * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element\n     * from the renderer will result in it being immediately enabled and the element being rendered.\n     *\n     * @param {QRious} qrious - the {@link QRious} instance to be used\n     * @param {*} element - the element onto which the QR code is to be rendered\n     * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Renderer = lite.extend(function(qrious, element, enabled) {\n      /**\n       * The {@link QRious} instance.\n       *\n       * @protected\n       * @type {QRious}\n       * @memberof Renderer#\n       */\n      this.qrious = qrious;\n  \n      /**\n       * The element onto which this {@link Renderer} is rendering the QR code.\n       *\n       * @protected\n       * @type {*}\n       * @memberof Renderer#\n       */\n      this.element = element;\n      this.element.qrious = qrious;\n  \n      /**\n       * Whether this {@link Renderer} is enabled.\n       *\n       * @protected\n       * @type {boolean}\n       * @memberof Renderer#\n       */\n      this.enabled = Boolean(enabled);\n    }, {\n  \n      /**\n       * Draws the specified QR code <code>frame</code> on the underlying element.\n       *\n       * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n       *\n       * @param {Frame} frame - the {@link Frame} to be drawn\n       * @return {void}\n       * @protected\n       * @abstract\n       * @memberof Renderer#\n       */\n      draw: function(frame) {},\n  \n      /**\n       * Returns the element onto which this {@link Renderer} is rendering the QR code.\n       *\n       * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered\n       * before the element is returned.\n       *\n       * @return {*} The element.\n       * @public\n       * @memberof Renderer#\n       */\n      getElement: function() {\n        if (!this.enabled) {\n          this.enabled = true;\n          this.render();\n        }\n  \n        return this.element;\n      },\n  \n      /**\n       * Calculates the size (in pixel units) to represent an individual module within the QR code based on the\n       * <code>frame</code> provided.\n       *\n       * Any configured padding will be excluded from the returned size.\n       *\n       * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.\n       * This is done so that the inevitable clipping is handled more gracefully since this way at least something is\n       * displayed instead of just a blank space filled by the background color.\n       *\n       * @param {Frame} frame - the {@link Frame} from which the module size is to be derived\n       * @return {number} The pixel size for each module in the QR code which will be no less than one.\n       * @protected\n       * @memberof Renderer#\n       */\n      getModuleSize: function(frame) {\n        var qrious = this.qrious;\n        var padding = qrious.padding || 0;\n        var pixels = Math.floor((qrious.size - (padding * 2)) / frame.width);\n  \n        return Math.max(1, pixels);\n      },\n\n      /**\n       * Renders a QR code on the underlying element based on the <code>frame</code> provided.\n       *\n       * @param {Frame} frame - the {@link Frame} to be rendered\n       * @return {void}\n       * @public\n       * @memberof Renderer#\n       */\n      render: function(frame) {\n        if (this.enabled) {\n          this.resize();\n          this.reset();\n          this.draw(frame);\n        }\n      },\n  \n      /**\n       * Resets the underlying element, effectively clearing any previously rendered QR code.\n       *\n       * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n       *\n       * @return {void}\n       * @protected\n       * @abstract\n       * @memberof Renderer#\n       */\n      reset: function() {},\n  \n      /**\n       * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.\n       *\n       * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.\n       *\n       * @return {void}\n       * @protected\n       * @abstract\n       * @memberof Renderer#\n       */\n      resize: function() {}\n  \n    });\n  \n    var Renderer_1 = Renderer;\n  \n    /**\n     * An implementation of {@link Renderer} for working with <code>canvas</code> elements.\n     *\n     * @public\n     * @class\n     * @extends Renderer\n     */\n    var CanvasRenderer = Renderer_1.extend({\n  \n      /**\n       * @override\n       */\n      draw: function(frame) {\n        var i, j;\n        var qrious = this.qrious;\n        var moduleSize = this.getModuleSize(frame);\n        var offset = parseInt((this.element.width-(frame.width * moduleSize)) / 2);\n        var context = this.element.getContext('2d');\n  \n        context.fillStyle = qrious.foreground;\n        context.globalAlpha = qrious.foregroundAlpha;\n  \n        for (i = 0; i < frame.width; i++) {\n          for (j = 0; j < frame.width; j++) {\n            if (frame.buffer[(j * frame.width) + i]) {\n              context.fillRect((moduleSize * i) + offset, (moduleSize * j) + offset, moduleSize, moduleSize);\n            }\n          }\n        }\n      },\n  \n      /**\n       * @override\n       */\n      reset: function() {\n        var qrious = this.qrious;\n        var context = this.element.getContext('2d');\n        var size = qrious.size;\n  \n        context.lineWidth = 1;\n        context.clearRect(0, 0, size, size);\n        context.fillStyle = qrious.background;\n        context.globalAlpha = qrious.backgroundAlpha;\n        context.fillRect(0, 0, size, size);\n      },\n  \n      /**\n       * @override\n       */\n      resize: function() {\n        var element = this.element;\n  \n        element.width = element.height = this.qrious.size;\n      }\n  \n    });\n  \n    var CanvasRenderer_1 = CanvasRenderer;\n  \n    /* eslint no-multi-spaces: \"off\" */\n  \n  \n  \n    /**\n     * Contains alignment pattern information.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Alignment = lite.extend(null, {\n  \n      /**\n       * The alignment pattern block.\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof Alignment\n       */\n      BLOCK: [\n        0,  11, 15, 19, 23, 27, 31,\n        16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,\n        26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28\n      ]\n  \n    });\n  \n    var Alignment_1 = Alignment;\n  \n    /* eslint no-multi-spaces: \"off\" */\n  \n  \n  \n    /**\n     * Contains error correction information.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var ErrorCorrection = lite.extend(null, {\n  \n      /**\n       * The error correction blocks.\n       *\n       * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally\n       * the ECC width.\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof ErrorCorrection\n       */\n      BLOCKS: [\n        1,  0,  19,  7,     1,  0,  16,  10,    1,  0,  13,  13,    1,  0,  9,   17,\n        1,  0,  34,  10,    1,  0,  28,  16,    1,  0,  22,  22,    1,  0,  16,  28,\n        1,  0,  55,  15,    1,  0,  44,  26,    2,  0,  17,  18,    2,  0,  13,  22,\n        1,  0,  80,  20,    2,  0,  32,  18,    2,  0,  24,  26,    4,  0,  9,   16,\n        1,  0,  108, 26,    2,  0,  43,  24,    2,  2,  15,  18,    2,  2,  11,  22,\n        2,  0,  68,  18,    4,  0,  27,  16,    4,  0,  19,  24,    4,  0,  15,  28,\n        2,  0,  78,  20,    4,  0,  31,  18,    2,  4,  14,  18,    4,  1,  13,  26,\n        2,  0,  97,  24,    2,  2,  38,  22,    4,  2,  18,  22,    4,  2,  14,  26,\n        2,  0,  116, 30,    3,  2,  36,  22,    4,  4,  16,  20,    4,  4,  12,  24,\n        2,  2,  68,  18,    4,  1,  43,  26,    6,  2,  19,  24,    6,  2,  15,  28,\n        4,  0,  81,  20,    1,  4,  50,  30,    4,  4,  22,  28,    3,  8,  12,  24,\n        2,  2,  92,  24,    6,  2,  36,  22,    4,  6,  20,  26,    7,  4,  14,  28,\n        4,  0,  107, 26,    8,  1,  37,  22,    8,  4,  20,  24,    12, 4,  11,  22,\n        3,  1,  115, 30,    4,  5,  40,  24,    11, 5,  16,  20,    11, 5,  12,  24,\n        5,  1,  87,  22,    5,  5,  41,  24,    5,  7,  24,  30,    11, 7,  12,  24,\n        5,  1,  98,  24,    7,  3,  45,  28,    15, 2,  19,  24,    3,  13, 15,  30,\n        1,  5,  107, 28,    10, 1,  46,  28,    1,  15, 22,  28,    2,  17, 14,  28,\n        5,  1,  120, 30,    9,  4,  43,  26,    17, 1,  22,  28,    2,  19, 14,  28,\n        3,  4,  113, 28,    3,  11, 44,  26,    17, 4,  21,  26,    9,  16, 13,  26,\n        3,  5,  107, 28,    3,  13, 41,  26,    15, 5,  24,  30,    15, 10, 15,  28,\n        4,  4,  116, 28,    17, 0,  42,  26,    17, 6,  22,  28,    19, 6,  16,  30,\n        2,  7,  111, 28,    17, 0,  46,  28,    7,  16, 24,  30,    34, 0,  13,  24,\n        4,  5,  121, 30,    4,  14, 47,  28,    11, 14, 24,  30,    16, 14, 15,  30,\n        6,  4,  117, 30,    6,  14, 45,  28,    11, 16, 24,  30,    30, 2,  16,  30,\n        8,  4,  106, 26,    8,  13, 47,  28,    7,  22, 24,  30,    22, 13, 15,  30,\n        10, 2,  114, 28,    19, 4,  46,  28,    28, 6,  22,  28,    33, 4,  16,  30,\n        8,  4,  122, 30,    22, 3,  45,  28,    8,  26, 23,  30,    12, 28, 15,  30,\n        3,  10, 117, 30,    3,  23, 45,  28,    4,  31, 24,  30,    11, 31, 15,  30,\n        7,  7,  116, 30,    21, 7,  45,  28,    1,  37, 23,  30,    19, 26, 15,  30,\n        5,  10, 115, 30,    19, 10, 47,  28,    15, 25, 24,  30,    23, 25, 15,  30,\n        13, 3,  115, 30,    2,  29, 46,  28,    42, 1,  24,  30,    23, 28, 15,  30,\n        17, 0,  115, 30,    10, 23, 46,  28,    10, 35, 24,  30,    19, 35, 15,  30,\n        17, 1,  115, 30,    14, 21, 46,  28,    29, 19, 24,  30,    11, 46, 15,  30,\n        13, 6,  115, 30,    14, 23, 46,  28,    44, 7,  24,  30,    59, 1,  16,  30,\n        12, 7,  121, 30,    12, 26, 47,  28,    39, 14, 24,  30,    22, 41, 15,  30,\n        6,  14, 121, 30,    6,  34, 47,  28,    46, 10, 24,  30,    2,  64, 15,  30,\n        17, 4,  122, 30,    29, 14, 46,  28,    49, 10, 24,  30,    24, 46, 15,  30,\n        4,  18, 122, 30,    13, 32, 46,  28,    48, 14, 24,  30,    42, 32, 15,  30,\n        20, 4,  117, 30,    40, 7,  47,  28,    43, 22, 24,  30,    10, 67, 15,  30,\n        19, 6,  118, 30,    18, 31, 47,  28,    34, 34, 24,  30,    20, 61, 15,  30\n      ],\n  \n      /**\n       * The final format bits with mask (level << 3 | mask).\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof ErrorCorrection\n       */\n      FINAL_FORMAT: [\n        // L\n        0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,\n        // M\n        0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,\n        // Q\n        0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,\n        // H\n        0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b\n      ],\n  \n      /**\n       * A map of human-readable ECC levels.\n       *\n       * @public\n       * @static\n       * @type {Object.<string, number>}\n       * @memberof ErrorCorrection\n       */\n      LEVELS: {\n        L: 1,\n        M: 2,\n        Q: 3,\n        H: 4\n      }\n  \n    });\n  \n    var ErrorCorrection_1 = ErrorCorrection;\n  \n    /**\n     * Contains Galois field information.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Galois = lite.extend(null, {\n  \n      /**\n       * The Galois field exponent table.\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof Galois\n       */\n      EXPONENT: [\n        0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,\n        0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,\n        0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,\n        0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,\n        0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,\n        0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,\n        0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,\n        0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,\n        0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,\n        0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,\n        0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,\n        0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,\n        0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,\n        0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,\n        0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,\n        0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00\n      ],\n  \n      /**\n       * The Galois field log table.\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof Galois\n       */\n      LOG: [\n        0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,\n        0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,\n        0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,\n        0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,\n        0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,\n        0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,\n        0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,\n        0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,\n        0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,\n        0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,\n        0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,\n        0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,\n        0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,\n        0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,\n        0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,\n        0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf\n      ]\n  \n    });\n  \n    var Galois_1 = Galois;\n  \n    /**\n     * Contains version pattern information.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Version = lite.extend(null, {\n  \n      /**\n       * The version pattern block.\n       *\n       * @public\n       * @static\n       * @type {number[]}\n       * @memberof Version\n       */\n      BLOCK: [\n        0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532,\n        0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5,\n        0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69\n      ]\n  \n    });\n  \n    var Version_1 = Version;\n  \n    /**\n     * Generates information for a QR code frame based on a specific value to be encoded.\n     *\n     * @param {Frame~Options} options - the options to be used\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Frame = lite.extend(function(options) {\n      var dataBlock, eccBlock, index, neccBlock1, neccBlock2;\n      var valueLength = options.value.length;\n  \n      this._badness = [];\n      this._level = ErrorCorrection_1.LEVELS[options.level];\n      this._polynomial = [];\n      this._value = options.value;\n      this._version = 0;\n      this._stringBuffer = [];\n  \n      while (this._version < 40) {\n        this._version++;\n  \n        index = ((this._level - 1) * 4) + ((this._version - 1) * 16);\n  \n        neccBlock1 = ErrorCorrection_1.BLOCKS[index++];\n        neccBlock2 = ErrorCorrection_1.BLOCKS[index++];\n        dataBlock = ErrorCorrection_1.BLOCKS[index++];\n        eccBlock = ErrorCorrection_1.BLOCKS[index];\n  \n        index = (dataBlock * (neccBlock1 + neccBlock2)) + neccBlock2 - 3 + (this._version <= 9);\n  \n        if (valueLength <= index) {\n          break;\n        }\n      }\n  \n      this._dataBlock = dataBlock;\n      this._eccBlock = eccBlock;\n      this._neccBlock1 = neccBlock1;\n      this._neccBlock2 = neccBlock2;\n  \n      /**\n       * The data width is based on version.\n       *\n       * @public\n       * @type {number}\n       * @memberof Frame#\n       */\n      // FIXME: Ensure that it fits instead of being truncated.\n      var width = this.width = 17 + (4 * this._version);\n  \n      /**\n       * The image buffer.\n       *\n       * @public\n       * @type {number[]}\n       * @memberof Frame#\n       */\n      this.buffer = Frame._createArray(width * width);\n  \n      this._ecc = Frame._createArray(dataBlock + ((dataBlock + eccBlock) * (neccBlock1 + neccBlock2)) + neccBlock2);\n      this._mask = Frame._createArray(((width * (width + 1)) + 1) / 2);\n  \n      this._insertFinders();\n      this._insertAlignments();\n  \n      // Insert single foreground cell.\n      this.buffer[8 + (width * (width - 8))] = 1;\n  \n      this._insertTimingGap();\n      this._reverseMask();\n      this._insertTimingRowAndColumn();\n      this._insertVersion();\n      this._syncMask();\n      this._convertBitStream(valueLength);\n      this._calculatePolynomial();\n      this._appendEccToData();\n      this._interleaveBlocks();\n      this._pack();\n      this._finish();\n    }, {\n  \n      _addAlignment: function(x, y) {\n        var i;\n        var buffer = this.buffer;\n        var width = this.width;\n  \n        buffer[x + (width * y)] = 1;\n  \n        for (i = -2; i < 2; i++) {\n          buffer[x + i + (width * (y - 2))] = 1;\n          buffer[x - 2 + (width * (y + i + 1))] = 1;\n          buffer[x + 2 + (width * (y + i))] = 1;\n          buffer[x + i + 1 + (width * (y + 2))] = 1;\n        }\n  \n        for (i = 0; i < 2; i++) {\n          this._setMask(x - 1, y + i);\n          this._setMask(x + 1, y - i);\n          this._setMask(x - i, y - 1);\n          this._setMask(x + i, y + 1);\n        }\n      },\n  \n      _appendData: function(data, dataLength, ecc, eccLength) {\n        var bit, i, j;\n        var polynomial = this._polynomial;\n        var stringBuffer = this._stringBuffer;\n  \n        for (i = 0; i < eccLength; i++) {\n          stringBuffer[ecc + i] = 0;\n        }\n  \n        for (i = 0; i < dataLength; i++) {\n          bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];\n  \n          if (bit !== 255) {\n            for (j = 1; j < eccLength; j++) {\n              stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^\n                Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];\n            }\n          } else {\n            for (j = ecc; j < ecc + eccLength; j++) {\n              stringBuffer[j] = stringBuffer[j + 1];\n            }\n          }\n  \n          stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];\n        }\n      },\n  \n      _appendEccToData: function() {\n        var i;\n        var data = 0;\n        var dataBlock = this._dataBlock;\n        var ecc = this._calculateMaxLength();\n        var eccBlock = this._eccBlock;\n  \n        for (i = 0; i < this._neccBlock1; i++) {\n          this._appendData(data, dataBlock, ecc, eccBlock);\n  \n          data += dataBlock;\n          ecc += eccBlock;\n        }\n  \n        for (i = 0; i < this._neccBlock2; i++) {\n          this._appendData(data, dataBlock + 1, ecc, eccBlock);\n  \n          data += dataBlock + 1;\n          ecc += eccBlock;\n        }\n      },\n  \n      _applyMask: function(mask) {\n        var r3x, r3y, x, y;\n        var buffer = this.buffer;\n        var width = this.width;\n  \n        switch (mask) {\n        case 0:\n          for (y = 0; y < width; y++) {\n            for (x = 0; x < width; x++) {\n              if (!((x + y) & 1) && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 1:\n          for (y = 0; y < width; y++) {\n            for (x = 0; x < width; x++) {\n              if (!(y & 1) && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 2:\n          for (y = 0; y < width; y++) {\n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n  \n              if (!r3x && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 3:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n  \n            for (r3x = r3y, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n  \n              if (!r3x && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 4:\n          for (y = 0; y < width; y++) {\n            for (r3x = 0, r3y = (y >> 1) & 1, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n                r3y = !r3y;\n              }\n  \n              if (!r3y && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 5:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n  \n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n  \n              if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 6:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n  \n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n  \n              if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        case 7:\n          for (r3y = 0, y = 0; y < width; y++, r3y++) {\n            if (r3y === 3) {\n              r3y = 0;\n            }\n  \n            for (r3x = 0, x = 0; x < width; x++, r3x++) {\n              if (r3x === 3) {\n                r3x = 0;\n              }\n  \n              if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {\n                buffer[x + (y * width)] ^= 1;\n              }\n            }\n          }\n  \n          break;\n        }\n      },\n  \n      _calculateMaxLength: function() {\n        return (this._dataBlock * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n      },\n  \n      _calculatePolynomial: function() {\n        var i, j;\n        var eccBlock = this._eccBlock;\n        var polynomial = this._polynomial;\n  \n        polynomial[0] = 1;\n  \n        for (i = 0; i < eccBlock; i++) {\n          polynomial[i + 1] = 1;\n  \n          for (j = i; j > 0; j--) {\n            polynomial[j] = polynomial[j] ? polynomial[j - 1] ^\n              Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];\n          }\n  \n          polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];\n        }\n  \n        // Use logs for generator polynomial to save calculation step.\n        for (i = 0; i <= eccBlock; i++) {\n          polynomial[i] = Galois_1.LOG[polynomial[i]];\n        }\n      },\n  \n      _checkBadness: function() {\n        var b, b1, h, x, y;\n        var bad = 0;\n        var badness = this._badness;\n        var buffer = this.buffer;\n        var width = this.width;\n  \n        // Blocks of same colour.\n        for (y = 0; y < width - 1; y++) {\n          for (x = 0; x < width - 1; x++) {\n            // All foreground colour.\n            if ((buffer[x + (width * y)] &&\n              buffer[x + 1 + (width * y)] &&\n              buffer[x + (width * (y + 1))] &&\n              buffer[x + 1 + (width * (y + 1))]) ||\n              // All background colour.\n              !(buffer[x + (width * y)] ||\n              buffer[x + 1 + (width * y)] ||\n              buffer[x + (width * (y + 1))] ||\n              buffer[x + 1 + (width * (y + 1))])) {\n              bad += Frame.N2;\n            }\n          }\n        }\n  \n        var bw = 0;\n  \n        // X runs.\n        for (y = 0; y < width; y++) {\n          h = 0;\n  \n          badness[0] = 0;\n  \n          for (b = 0, x = 0; x < width; x++) {\n            b1 = buffer[x + (width * y)];\n  \n            if (b === b1) {\n              badness[h]++;\n            } else {\n              badness[++h] = 1;\n            }\n  \n            b = b1;\n            bw += b ? 1 : -1;\n          }\n  \n          bad += this._getBadness(h);\n        }\n  \n        if (bw < 0) {\n          bw = -bw;\n        }\n  \n        var count = 0;\n        var big = bw;\n        big += big << 2;\n        big <<= 1;\n  \n        while (big > width * width) {\n          big -= width * width;\n          count++;\n        }\n  \n        bad += count * Frame.N4;\n  \n        // Y runs.\n        for (x = 0; x < width; x++) {\n          h = 0;\n  \n          badness[0] = 0;\n  \n          for (b = 0, y = 0; y < width; y++) {\n            b1 = buffer[x + (width * y)];\n  \n            if (b === b1) {\n              badness[h]++;\n            } else {\n              badness[++h] = 1;\n            }\n  \n            b = b1;\n          }\n  \n          bad += this._getBadness(h);\n        }\n  \n        return bad;\n      },\n  \n      _convertBitStream: function(length) {\n        var bit, i;\n        var ecc = this._ecc;\n        var version = this._version;\n  \n        // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).\n        for (i = 0; i < length; i++) {\n          ecc[i] = this._value.charCodeAt(i);\n        }\n  \n        var stringBuffer = this._stringBuffer = ecc.slice();\n        var maxLength = this._calculateMaxLength();\n  \n        if (length >= maxLength - 2) {\n          length = maxLength - 2;\n  \n          if (version > 9) {\n            length--;\n          }\n        }\n  \n        // Shift and re-pack to insert length prefix.\n        var index = length;\n  \n        if (version > 9) {\n          stringBuffer[index + 2] = 0;\n          stringBuffer[index + 3] = 0;\n  \n          while (index--) {\n            bit = stringBuffer[index];\n  \n            stringBuffer[index + 3] |= 255 & (bit << 4);\n            stringBuffer[index + 2] = bit >> 4;\n          }\n  \n          stringBuffer[2] |= 255 & (length << 4);\n          stringBuffer[1] = length >> 4;\n          stringBuffer[0] = 0x40 | (length >> 12);\n        } else {\n          stringBuffer[index + 1] = 0;\n          stringBuffer[index + 2] = 0;\n  \n          while (index--) {\n            bit = stringBuffer[index];\n  \n            stringBuffer[index + 2] |= 255 & (bit << 4);\n            stringBuffer[index + 1] = bit >> 4;\n          }\n  \n          stringBuffer[1] |= 255 & (length << 4);\n          stringBuffer[0] = 0x40 | (length >> 4);\n        }\n  \n        // Fill to end with pad pattern.\n        index = length + 3 - (version < 10);\n  \n        while (index < maxLength) {\n          stringBuffer[index++] = 0xec;\n          stringBuffer[index++] = 0x11;\n        }\n      },\n  \n      _getBadness: function(length) {\n        var i;\n        var badRuns = 0;\n        var badness = this._badness;\n  \n        for (i = 0; i <= length; i++) {\n          if (badness[i] >= 5) {\n            badRuns += Frame.N1 + badness[i] - 5;\n          }\n        }\n  \n        // FBFFFBF as in finder.\n        for (i = 3; i < length - 1; i += 2) {\n          if (badness[i - 2] === badness[i + 2] &&\n            badness[i + 2] === badness[i - 1] &&\n            badness[i - 1] === badness[i + 1] &&\n            badness[i - 1] * 3 === badness[i] &&\n            // Background around the foreground pattern? Not part of the specs.\n            (badness[i - 3] === 0 || i + 3 > length ||\n            badness[i - 3] * 3 >= badness[i] * 4 ||\n            badness[i + 3] * 3 >= badness[i] * 4)) {\n            badRuns += Frame.N3;\n          }\n        }\n  \n        return badRuns;\n      },\n  \n      _finish: function() {\n        // Save pre-mask copy of frame.\n        this._stringBuffer = this.buffer.slice();\n  \n        var currentMask, i;\n        var bit = 0;\n        var mask = 30000;\n  \n        /*\n         * Using for instead of while since in original Arduino code if an early mask was \"good enough\" it wouldn't try for\n         * a better one since they get more complex and take longer.\n         */\n        for (i = 0; i < 8; i++) {\n          // Returns foreground-background imbalance.\n          this._applyMask(i);\n  \n          currentMask = this._checkBadness();\n  \n          // Is current mask better than previous best?\n          if (currentMask < mask) {\n            mask = currentMask;\n            bit = i;\n          }\n  \n          // Don't increment \"i\" to a void redoing mask.\n          if (bit === 7) {\n            break;\n          }\n  \n          // Reset for next pass.\n          this.buffer = this._stringBuffer.slice();\n        }\n  \n        // Redo best mask as none were \"good enough\" (i.e. last wasn't bit).\n        if (bit !== i) {\n          this._applyMask(bit);\n        }\n  \n        // Add in final mask/ECC level bytes.\n        mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];\n  \n        var buffer = this.buffer;\n        var width = this.width;\n  \n        // Low byte.\n        for (i = 0; i < 8; i++, mask >>= 1) {\n          if (mask & 1) {\n            buffer[width - 1 - i + (width * 8)] = 1;\n  \n            if (i < 6) {\n              buffer[8 + (width * i)] = 1;\n            } else {\n              buffer[8 + (width * (i + 1))] = 1;\n            }\n          }\n        }\n  \n        // High byte.\n        for (i = 0; i < 7; i++, mask >>= 1) {\n          if (mask & 1) {\n            buffer[8 + (width * (width - 7 + i))] = 1;\n  \n            if (i) {\n              buffer[6 - i + (width * 8)] = 1;\n            } else {\n              buffer[7 + (width * 8)] = 1;\n            }\n          }\n        }\n      },\n  \n      _interleaveBlocks: function() {\n        var i, j;\n        var dataBlock = this._dataBlock;\n        var ecc = this._ecc;\n        var eccBlock = this._eccBlock;\n        var k = 0;\n        var maxLength = this._calculateMaxLength();\n        var neccBlock1 = this._neccBlock1;\n        var neccBlock2 = this._neccBlock2;\n        var stringBuffer = this._stringBuffer;\n  \n        for (i = 0; i < dataBlock; i++) {\n          for (j = 0; j < neccBlock1; j++) {\n            ecc[k++] = stringBuffer[i + (j * dataBlock)];\n          }\n  \n          for (j = 0; j < neccBlock2; j++) {\n            ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n          }\n        }\n  \n        for (j = 0; j < neccBlock2; j++) {\n          ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];\n        }\n  \n        for (i = 0; i < eccBlock; i++) {\n          for (j = 0; j < neccBlock1 + neccBlock2; j++) {\n            ecc[k++] = stringBuffer[maxLength + i + (j * eccBlock)];\n          }\n        }\n  \n        this._stringBuffer = ecc;\n      },\n  \n      _insertAlignments: function() {\n        var i, x, y;\n        var version = this._version;\n        var width = this.width;\n  \n        if (version > 1) {\n          i = Alignment_1.BLOCK[version];\n          y = width - 7;\n  \n          for (;;) {\n            x = width - 7;\n  \n            while (x > i - 3) {\n              this._addAlignment(x, y);\n  \n              if (x < i) {\n                break;\n              }\n  \n              x -= i;\n            }\n  \n            if (y <= i + 9) {\n              break;\n            }\n  \n            y -= i;\n  \n            this._addAlignment(6, y);\n            this._addAlignment(y, 6);\n          }\n        }\n      },\n  \n      _insertFinders: function() {\n        var i, j, x, y;\n        var buffer = this.buffer;\n        var width = this.width;\n  \n        for (i = 0; i < 3; i++) {\n          j = 0;\n          y = 0;\n  \n          if (i === 1) {\n            j = width - 7;\n          }\n          if (i === 2) {\n            y = width - 7;\n          }\n  \n          buffer[y + 3 + (width * (j + 3))] = 1;\n  \n          for (x = 0; x < 6; x++) {\n            buffer[y + x + (width * j)] = 1;\n            buffer[y + (width * (j + x + 1))] = 1;\n            buffer[y + 6 + (width * (j + x))] = 1;\n            buffer[y + x + 1 + (width * (j + 6))] = 1;\n          }\n  \n          for (x = 1; x < 5; x++) {\n            this._setMask(y + x, j + 1);\n            this._setMask(y + 1, j + x + 1);\n            this._setMask(y + 5, j + x);\n            this._setMask(y + x + 1, j + 5);\n          }\n  \n          for (x = 2; x < 4; x++) {\n            buffer[y + x + (width * (j + 2))] = 1;\n            buffer[y + 2 + (width * (j + x + 1))] = 1;\n            buffer[y + 4 + (width * (j + x))] = 1;\n            buffer[y + x + 1 + (width * (j + 4))] = 1;\n          }\n        }\n      },\n  \n      _insertTimingGap: function() {\n        var x, y;\n        var width = this.width;\n  \n        for (y = 0; y < 7; y++) {\n          this._setMask(7, y);\n          this._setMask(width - 8, y);\n          this._setMask(7, y + width - 7);\n        }\n  \n        for (x = 0; x < 8; x++) {\n          this._setMask(x, 7);\n          this._setMask(x + width - 8, 7);\n          this._setMask(x, width - 8);\n        }\n      },\n  \n      _insertTimingRowAndColumn: function() {\n        var x;\n        var buffer = this.buffer;\n        var width = this.width;\n  \n        for (x = 0; x < width - 14; x++) {\n          if (x & 1) {\n            this._setMask(8 + x, 6);\n            this._setMask(6, 8 + x);\n          } else {\n            buffer[8 + x + (width * 6)] = 1;\n            buffer[6 + (width * (8 + x))] = 1;\n          }\n        }\n      },\n  \n      _insertVersion: function() {\n        var i, j, x, y;\n        var buffer = this.buffer;\n        var version = this._version;\n        var width = this.width;\n  \n        if (version > 6) {\n          i = Version_1.BLOCK[version - 7];\n          j = 17;\n  \n          for (x = 0; x < 6; x++) {\n            for (y = 0; y < 3; y++, j--) {\n              if (1 & (j > 11 ? version >> j - 12 : i >> j)) {\n                buffer[5 - x + (width * (2 - y + width - 11))] = 1;\n                buffer[2 - y + width - 11 + (width * (5 - x))] = 1;\n              } else {\n                this._setMask(5 - x, 2 - y + width - 11);\n                this._setMask(2 - y + width - 11, 5 - x);\n              }\n            }\n          }\n        }\n      },\n  \n      _isMasked: function(x, y) {\n        var bit = Frame._getMaskBit(x, y);\n  \n        return this._mask[bit] === 1;\n      },\n  \n      _pack: function() {\n        var bit, i, j;\n        var k = 1;\n        var v = 1;\n        var width = this.width;\n        var x = width - 1;\n        var y = width - 1;\n  \n        // Interleaved data and ECC codes.\n        var length = ((this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;\n  \n        for (i = 0; i < length; i++) {\n          bit = this._stringBuffer[i];\n  \n          for (j = 0; j < 8; j++, bit <<= 1) {\n            if (0x80 & bit) {\n              this.buffer[x + (width * y)] = 1;\n            }\n  \n            // Find next fill position.\n            do {\n              if (v) {\n                x--;\n              } else {\n                x++;\n  \n                if (k) {\n                  if (y !== 0) {\n                    y--;\n                  } else {\n                    x -= 2;\n                    k = !k;\n  \n                    if (x === 6) {\n                      x--;\n                      y = 9;\n                    }\n                  }\n                } else if (y !== width - 1) {\n                  y++;\n                } else {\n                  x -= 2;\n                  k = !k;\n  \n                  if (x === 6) {\n                    x--;\n                    y -= 8;\n                  }\n                }\n              }\n  \n              v = !v;\n            } while (this._isMasked(x, y));\n          }\n        }\n      },\n  \n      _reverseMask: function() {\n        var x, y;\n        var width = this.width;\n  \n        for (x = 0; x < 9; x++) {\n          this._setMask(x, 8);\n        }\n  \n        for (x = 0; x < 8; x++) {\n          this._setMask(x + width - 8, 8);\n          this._setMask(8, x);\n        }\n  \n        for (y = 0; y < 7; y++) {\n          this._setMask(8, y + width - 7);\n        }\n      },\n  \n      _setMask: function(x, y) {\n        var bit = Frame._getMaskBit(x, y);\n  \n        this._mask[bit] = 1;\n      },\n  \n      _syncMask: function() {\n        var x, y;\n        var width = this.width;\n  \n        for (y = 0; y < width; y++) {\n          for (x = 0; x <= y; x++) {\n            if (this.buffer[x + (width * y)]) {\n              this._setMask(x, y);\n            }\n          }\n        }\n      }\n  \n    }, {\n  \n      _createArray: function(length) {\n        var i;\n        var array = [];\n  \n        for (i = 0; i < length; i++) {\n          array[i] = 0;\n        }\n  \n        return array;\n      },\n  \n      _getMaskBit: function(x, y) {\n        var bit;\n  \n        if (x > y) {\n          bit = x;\n          x = y;\n          y = bit;\n        }\n  \n        bit = y;\n        bit += y * y;\n        bit >>= 1;\n        bit += x;\n  \n        return bit;\n      },\n  \n      _modN: function(x) {\n        while (x >= 255) {\n          x -= 255;\n          x = (x >> 8) + (x & 255);\n        }\n  \n        return x;\n      },\n  \n      // *Badness* coefficients.\n      N1: 3,\n      N2: 3,\n      N3: 40,\n      N4: 10\n  \n    });\n  \n    var Frame_1 = Frame;\n  \n    /**\n     * The options used by {@link Frame}.\n     *\n     * @typedef {Object} Frame~Options\n     * @property {string} level - The ECC level to be used.\n     * @property {string} value - The value to be encoded.\n     */\n  \n    /**\n     * An implementation of {@link Renderer} for working with <code>img</code> elements.\n     *\n     * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from\n     * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.\n     *\n     * @public\n     * @class\n     * @extends Renderer\n     */\n    var ImageRenderer = Renderer_1.extend({\n  \n      /**\n       * @override\n       */\n      draw: function() {\n        this.element.src = this.qrious.toDataURL();\n      },\n  \n      /**\n       * @override\n       */\n      reset: function() {\n        this.element.src = '';\n      },\n  \n      /**\n       * @override\n       */\n      resize: function() {\n        var element = this.element;\n  \n        element.width = element.height = this.qrious.size;\n      }\n  \n    });\n  \n    var ImageRenderer_1 = ImageRenderer;\n  \n    /**\n     * Defines an available option while also configuring how values are applied to the target object.\n     *\n     * Optionally, a default value can be specified as well a value transformer for greater control over how the option\n     * value is applied.\n     *\n     * If no value transformer is specified, then any specified option will be applied directly. All values are maintained\n     * on the target object itself as a field using the option name prefixed with a single underscore.\n     *\n     * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the\n     * property that is defined on the target object that uses the option name.\n     *\n     * @param {string} name - the name to be used\n     * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;\n     * otherwise <code>false</code>\n     * @param {*} [defaultValue] - the default value to be used\n     * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Option = lite.extend(function(name, modifiable, defaultValue, valueTransformer) {\n      /**\n       * The name for this {@link Option}.\n       *\n       * @public\n       * @type {string}\n       * @memberof Option#\n       */\n      this.name = name;\n  \n      /**\n       * Whether a setter should be included on the property defined on target objects for this {@link Option}.\n       *\n       * @public\n       * @type {boolean}\n       * @memberof Option#\n       */\n      this.modifiable = Boolean(modifiable);\n  \n      /**\n       * The default value for this {@link Option}.\n       *\n       * @public\n       * @type {*}\n       * @memberof Option#\n       */\n      this.defaultValue = defaultValue;\n  \n      this._valueTransformer = valueTransformer;\n    }, {\n  \n      /**\n       * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.\n       *\n       * If a value transformer has been specified for this {@link Option}, it will be called upon to transform\n       * <code>value</code>. Otherwise, <code>value</code> will be returned directly.\n       *\n       * @param {*} value - the value to be transformed\n       * @return {*} The transformed value or <code>value</code> if no value transformer is specified.\n       * @public\n       * @memberof Option#\n       */\n      transform: function(value) {\n        var transformer = this._valueTransformer;\n        if (typeof transformer === 'function') {\n          return transformer(value, this);\n        }\n  \n        return value;\n      }\n  \n    });\n  \n    var Option_1 = Option;\n  \n    /**\n     * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.\n     *\n     * @callback Option~ValueTransformer\n     * @param {*} value - the value to be transformed\n     * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed\n     * @return {*} The transform value.\n     */\n  \n    /**\n     * Contains utility methods that are useful throughout the library.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Utilities = lite.extend(null, {\n  \n      /**\n       * Returns the absolute value of a given number.\n       *\n       * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as\n       * <code>null</code> instead of zero.\n       *\n       * @param {number} value - the number whose absolute value is to be returned\n       * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is\n       * <code>null</code>.\n       * @public\n       * @static\n       * @memberof Utilities\n       */\n      abs: function(value) {\n        return value != null ? Math.abs(value) : null;\n      },\n  \n      /**\n       * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n       * (not inherited) property.\n       *\n       * @param {Object} object - the object on which the property is to be checked\n       * @param {string} name - the name of the property to be checked\n       * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n       * @public\n       * @static\n       * @memberof Utilities\n       */\n      hasOwn: function(object, name) {\n        return Object.prototype.hasOwnProperty.call(object, name);\n      },\n  \n      /**\n       * A non-operation method that does absolutely nothing.\n       *\n       * @return {void}\n       * @public\n       * @static\n       * @memberof Utilities\n       */\n      noop: function() {},\n  \n      /**\n       * Transforms the specified <code>string</code> to upper case while remaining null-safe.\n       *\n       * @param {string} string - the string to be transformed to upper case\n       * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.\n       * @public\n       * @static\n       * @memberof Utilities\n       */\n      toUpperCase: function(string) {\n        return string != null ? string.toUpperCase() : null;\n      }\n  \n    });\n  \n    var Utilities_1 = Utilities;\n  \n    /**\n     * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.\n     *\n     * Although the option definitions are shared between targets, the values are maintained on the targets themselves.\n     *\n     * @param {Option[]} options - the options to be used\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var OptionManager = lite.extend(function(options) {\n      /**\n       * The available options for this {@link OptionManager}.\n       *\n       * @public\n       * @type {Object.<string, Option>}\n       * @memberof OptionManager#\n       */\n      this.options = {};\n  \n      options.forEach(function(option) {\n        this.options[option.name] = option;\n      }, this);\n    }, {\n  \n      /**\n       * Returns whether an option with the specified <code>name</code> is available.\n       *\n       * @param {string} name - the name of the {@link Option} whose existence is to be checked\n       * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n       * <code>false</code>.\n       * @public\n       * @memberof OptionManager#\n       */\n      exists: function(name) {\n        return this.options[name] != null;\n      },\n  \n      /**\n       * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.\n       *\n       * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned\n       * @param {Object} target - the object from which the value of the named {@link Option} is to be returned\n       * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.\n       * @public\n       * @memberof OptionManager#\n       */\n      get: function(name, target) {\n        return OptionManager._get(this.options[name], target);\n      },\n  \n      /**\n       * Returns a copy of all of the available options on the <code>target</code> object provided.\n       *\n       * @param {Object} target - the object from which the option name/value pairs are to be returned\n       * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.\n       * @public\n       * @memberof OptionManager#\n       */\n      getAll: function(target) {\n        var name;\n        var options = this.options;\n        var result = {};\n  \n        for (name in options) {\n          if (Utilities_1.hasOwn(options, name)) {\n            result[name] = OptionManager._get(options[name], target);\n          }\n        }\n  \n        return result;\n      },\n  \n      /**\n       * Initializes the available options for the <code>target</code> object provided and then applies the initial values\n       * within the speciifed <code>options</code>.\n       *\n       * This method will throw an error if any of the names within <code>options</code> does not match an available option.\n       *\n       * This involves setting the default values and defining properties for all of the available options on\n       * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and\n       * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined\n       * property that will allow its corresponding value to be modified.\n       *\n       * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a\n       * modifiable option, but only when done so via the defined property's setter.\n       *\n       * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set\n       * @param {Object} target - the object on which the options are to be initialized\n       * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on\n       * <code>target</code>\n       * @return {void}\n       * @throws {Error} If <code>options</code> contains an invalid option name.\n       * @public\n       * @memberof OptionManager#\n       */\n      init: function(options, target, changeHandler) {\n        if (typeof changeHandler !== 'function') {\n          changeHandler = Utilities_1.noop;\n        }\n  \n        var name, option;\n  \n        for (name in this.options) {\n          if (Utilities_1.hasOwn(this.options, name)) {\n            option = this.options[name];\n  \n            OptionManager._set(option, option.defaultValue, target);\n            OptionManager._createAccessor(option, target, changeHandler);\n          }\n        }\n  \n        this._setAll(options, target, true);\n      },\n  \n      /**\n       * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to\n       * <code>value</code>.\n       *\n       * This method will throw an error if <code>name</code> does not match an available option or matches an option that\n       * cannot be modified.\n       *\n       * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default\n       * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to\n       * transform whichever value was determined to be used.\n       *\n       * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.\n       *\n       * @param {string} name - the name of the {@link Option} whose value is to be set\n       * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>\n       * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}\n       * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise\n       * <code>false</code>.\n       * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.\n       * @public\n       * @memberof OptionManager#\n       */\n      set: function(name, value, target) {\n        return this._set(name, value, target);\n      },\n  \n      /**\n       * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding\n       * values.\n       *\n       * This method will throw an error if any of the names within <code>options</code> does not match an available option\n       * or matches an option that cannot be modified.\n       *\n       * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default\n       * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer\n       * configured, it will be used to transform whichever value was determined to be used.\n       *\n       * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a\n       * result.\n       *\n       * @param {Object.<string, *>} options - the name/value pairs of options to be set\n       * @param {Object} target - the object on which the options are to be set\n       * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise\n       * <code>false</code>.\n       * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.\n       * @public\n       * @memberof OptionManager#\n       */\n      setAll: function(options, target) {\n        return this._setAll(options, target);\n      },\n  \n      _set: function(name, value, target, allowUnmodifiable) {\n        var option = this.options[name];\n        if (!option) {\n          throw new Error('Invalid option: ' + name);\n        }\n        if (!option.modifiable && !allowUnmodifiable) {\n          throw new Error('Option cannot be modified: ' + name);\n        }\n  \n        return OptionManager._set(option, value, target);\n      },\n  \n      _setAll: function(options, target, allowUnmodifiable) {\n        if (!options) {\n          return false;\n        }\n  \n        var name;\n        var changed = false;\n  \n        for (name in options) {\n          if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {\n            changed = true;\n          }\n        }\n  \n        return changed;\n      }\n  \n    }, {\n  \n      _createAccessor: function(option, target, changeHandler) {\n        var descriptor = {\n          get: function() {\n            return OptionManager._get(option, target);\n          }\n        };\n  \n        if (option.modifiable) {\n          descriptor.set = function(value) {\n            if (OptionManager._set(option, value, target)) {\n              changeHandler(value, option);\n            }\n          };\n        }\n  \n        Object.defineProperty(target, option.name, descriptor);\n      },\n  \n      _get: function(option, target) {\n        return target['_' + option.name];\n      },\n  \n      _set: function(option, value, target) {\n        var fieldName = '_' + option.name;\n        var oldValue = target[fieldName];\n        var newValue = option.transform(value != null ? value : option.defaultValue);\n  \n        target[fieldName] = newValue;\n  \n        return newValue !== oldValue;\n      }\n  \n    });\n  \n    var OptionManager_1 = OptionManager;\n  \n    /**\n     * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's\n     * setter.\n     *\n     * @callback OptionManager~ChangeHandler\n     * @param {*} value - the new value for <code>option</code> on the target object\n     * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.\n     * @return {void}\n     */\n  \n    /**\n     * A basic manager for {@link Service} implementations that are mapped to simple names.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var ServiceManager = lite.extend(function() {\n      this._services = {};\n    }, {\n  \n      /**\n       * Returns the {@link Service} being managed with the specified <code>name</code>.\n       *\n       * @param {string} name - the name of the {@link Service} to be returned\n       * @return {Service} The {@link Service} is being managed with <code>name</code>.\n       * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n       * @public\n       * @memberof ServiceManager#\n       */\n      getService: function(name) {\n        var service = this._services[name];\n        if (!service) {\n          throw new Error('Service is not being managed with name: ' + name);\n        }\n  \n        return service;\n      },\n  \n      /**\n       * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n       * <code>service</code> provided.\n       *\n       * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n       * @param {Service} service - the {@link Service} implementation to be managed\n       * @return {void}\n       * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n       * @public\n       * @memberof ServiceManager#\n       */\n      setService: function(name, service) {\n        if (this._services[name]) {\n          throw new Error('Service is already managed with name: ' + name);\n        }\n  \n        if (service) {\n          this._services[name] = service;\n        }\n      }\n  \n    });\n  \n    var ServiceManager_1 = ServiceManager;\n  \n    var optionManager = new OptionManager_1([\n      new Option_1('background', true, 'white'),\n      new Option_1('backgroundAlpha', true, 1, Utilities_1.abs),\n      new Option_1('element'),\n      new Option_1('foreground', true, 'black'),\n      new Option_1('foregroundAlpha', true, 1, Utilities_1.abs),\n      new Option_1('level', true, 'L', Utilities_1.toUpperCase),\n      new Option_1('mime', true, 'image/png'),\n      new Option_1('padding', true, null, Utilities_1.abs),\n      new Option_1('size', true, 100, Utilities_1.abs),\n      new Option_1('value', true, '')\n    ]);\n    var serviceManager = new ServiceManager_1();\n  \n    /**\n     * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.\n     *\n     * @param {QRious~Options} [options] - the options to be used\n     * @throws {Error} If any <code>options</code> are invalid.\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var QRious = lite.extend(function(options) {\n      optionManager.init(options, this, this.update.bind(this));\n  \n      var element = optionManager.get('element', this);\n      var elementService = serviceManager.getService('element');\n      var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();\n      var image = element && elementService.isImage(element) ? element : elementService.createImage();\n  \n      this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);\n      this._imageRenderer = new ImageRenderer_1(this, image, image === element);\n  \n      this.update();\n    }, {\n  \n      /**\n       * Returns all of the options configured for this {@link QRious}.\n       *\n       * Any changes made to the returned object will not be reflected in the options themselves or their corresponding\n       * underlying fields.\n       *\n       * @return {Object.<string, *>} A copy of the applied options.\n       * @public\n       * @memberof QRious#\n       */\n      get: function() {\n        return optionManager.getAll(this);\n      },\n  \n      /**\n       * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the\n       * underlying fields are changed as a result.\n       *\n       * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between\n       * changes.\n       *\n       * @param {QRious~Options} options - the options to be set\n       * @return {void}\n       * @throws {Error} If any <code>options</code> are invalid or cannot be modified.\n       * @public\n       * @memberof QRious#\n       */\n      set: function(options) {\n        if (optionManager.setAll(options, this)) {\n          this.update();\n        }\n      },\n  \n      /**\n       * Returns the image data URI for the generated QR code using the <code>mime</code> provided.\n       *\n       * @param {string} [mime] - the MIME type for the image\n       * @return {string} The image data URI for the QR code.\n       * @public\n       * @memberof QRious#\n       */\n      toDataURL: function(mime) {\n        return this.canvas.toDataURL(mime || this.mime);\n      },\n  \n      /**\n       * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.\n       *\n       * @return {void}\n       * @protected\n       * @memberof QRious#\n       */\n      update: function() {\n        var frame = new Frame_1({\n          level: this.level,\n          value: this.value\n        });\n  \n        this._canvasRenderer.render(frame);\n        this._imageRenderer.render(frame);\n      }\n  \n    }, {\n  \n      /**\n       * Configures the <code>service</code> provided to be used by all {@link QRious} instances.\n       *\n       * @param {Service} service - the {@link Service} to be configured\n       * @return {void}\n       * @throws {Error} If a {@link Service} has already been configured with the same name.\n       * @public\n       * @static\n       * @memberof QRious\n       */\n      use: function(service) {\n        serviceManager.setService(service.getName(), service);\n      }\n  \n    });\n  \n    Object.defineProperties(QRious.prototype, {\n  \n      canvas: {\n        /**\n         * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.\n         *\n         * @return {*} The <code>canvas</code> element.\n         * @public\n         * @memberof QRious#\n         * @alias canvas\n         */\n        get: function() {\n          return this._canvasRenderer.getElement();\n        }\n      },\n  \n      image: {\n        /**\n         * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.\n         *\n         * @return {*} The <code>img</code> element.\n         * @public\n         * @memberof QRious#\n         * @alias image\n         */\n        get: function() {\n          return this._imageRenderer.getElement();\n        }\n      }\n  \n    });\n  \n    var QRious_1$2 = QRious;\n  \n    /**\n     * The options used by {@link QRious}.\n     *\n     * @typedef {Object} QRious~Options\n     * @property {string} [background=\"white\"] - The background color to be applied to the QR code.\n     * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.\n     * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or\n     * <code>img</code>. The element(s) will be created if needed.\n     * @property {string} [foreground=\"black\"] - The foreground color to be applied to the QR code.\n     * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.\n     * @property {string} [level=\"L\"] - The error correction level to be applied to the QR code.\n     * @property {string} [mime=\"image/png\"] - The MIME type to be used to render the image for the QR code.\n     * @property {number} [padding] - The padding for the QR code in pixels.\n     * @property {number} [size=100] - The size of the QR code in pixels.\n     * @property {string} [value=\"\"] - The value to be encoded within the QR code.\n     */\n  \n    var index = QRious_1$2;\n  \n    /**\n     * Defines a service contract that must be met by all implementations.\n     *\n     * @public\n     * @class\n     * @extends Nevis\n     */\n    var Service = lite.extend({\n  \n      /**\n       * Returns the name of this {@link Service}.\n       *\n       * @return {string} The service name.\n       * @public\n       * @abstract\n       * @memberof Service#\n       */\n      getName: function() {}\n  \n    });\n  \n    var Service_1 = Service;\n  \n    /**\n     * A service for working with elements.\n     *\n     * @public\n     * @class\n     * @extends Service\n     */\n    var ElementService = Service_1.extend({\n  \n      /**\n       * Creates an instance of a canvas element.\n       *\n       * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n       *\n       * @return {*} The newly created canvas element.\n       * @public\n       * @abstract\n       * @memberof ElementService#\n       */\n      createCanvas: function() {},\n  \n      /**\n       * Creates an instance of a image element.\n       *\n       * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n       *\n       * @return {*} The newly created image element.\n       * @public\n       * @abstract\n       * @memberof ElementService#\n       */\n      createImage: function() {},\n  \n      /**\n       * @override\n       */\n      getName: function() {\n        return 'element';\n      },\n  \n      /**\n       * Returns whether the specified <code>element</code> is a canvas.\n       *\n       * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n       *\n       * @param {*} element - the element to be checked\n       * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.\n       * @public\n       * @abstract\n       * @memberof ElementService#\n       */\n      isCanvas: function(element) {},\n  \n      /**\n       * Returns whether the specified <code>element</code> is an image.\n       *\n       * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.\n       *\n       * @param {*} element - the element to be checked\n       * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.\n       * @public\n       * @abstract\n       * @memberof ElementService#\n       */\n      isImage: function(element) {}\n  \n    });\n  \n    var ElementService_1 = ElementService;\n  \n    /**\n     * An implementation of {@link ElementService} intended for use within a browser environment.\n     *\n     * @public\n     * @class\n     * @extends ElementService\n     */\n    var BrowserElementService = ElementService_1.extend({\n  \n      /**\n       * @override\n       */\n      createCanvas: function() {\n        return document.createElement('canvas');\n      },\n  \n      /**\n       * @override\n       */\n      createImage: function() {\n        return document.createElement('img');\n      },\n  \n      /**\n       * @override\n       */\n      isCanvas: function(element) {\n        return element instanceof HTMLCanvasElement;\n      },\n  \n      /**\n       * @override\n       */\n      isImage: function(element) {\n        return element instanceof HTMLImageElement;\n      }\n  \n    });\n  \n    var BrowserElementService_1 = BrowserElementService;\n  \n    index.use(new BrowserElementService_1());\n  \n    var QRious_1 = index;\n  \n    return QRious_1;\n  \n  })));", null],
  "mappings": "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AAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UACzE;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,UAAO;AAAA,UAAI;AAAA,UAAI;AAAA,UAAK;AAAA,QAC3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,cAAc;AAAA;AAAA,UAEZ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA;AAAA,UAExD;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA;AAAA,UAExD;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA;AAAA,UAExD;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,UAAQ;AAAA,QAC1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,QAAQ;AAAA,UACN,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,UACH,GAAG;AAAA,QACL;AAAA,MAEF,CAAC;AAED,UAAI,oBAAoB;AASxB,UAAI,SAAS,KAAK,OAAO,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAU7B,UAAU;AAAA,UACR;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,QAC5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAUA,KAAK;AAAA,UACH;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAC1F;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,UAAM;AAAA,U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",
  "names": ["element", "index", "ctx", "QrCode"]
}
